import numpy as np
import matplotlib.pyplot as plt

X = np.array([[5.9, 3.2], [4.6, 2.9], [6.2, 2.8], [4.7, 3.2], [5.5, 4.2], [5.0, 3.0], [4.9, 3.1], [6.7, 3.1], [5.1, 3.8], [6.0, 3]])
centroids = np.array([[6.2, 3.2], [6.6, 3.7], [6.5, 3.0]])
k = 3
convergence_threshold = 0.001
iterations = 0

while True:
    distances = np.linalg.norm(X[:, np.newaxis] - centroids, axis=2)
    labels = np.argmin(distances, axis=1)
    new_centroids = np.array([X[labels == i].mean(axis=0) for i in range(k)])
    if np.all(np.abs(new_centroids - centroids) < convergence_threshold):
        break
    centroids = new_centroids
    iterations += 1

# Visualize the clusters
colors = ['r', 'g', 'b']
for i in range(k):
    cluster_points = X[labels == i]
    plt.scatter(cluster_points[:, 0], cluster_points[:, 1], c=colors[i], marker='o', label=f'Cluster {i + 1}')

plt.scatter(centroids[:, 0], centroids[:, 1], c='black', marker='X', s=200, label='Cluster Centers')
plt.title('K-Means Clustering')
plt.xlabel('Feature 1')
plt.ylabel('Feature 2')
plt.legend()
plt.show()

# Continue with the rest of your code for printing cluster centers and iterations
